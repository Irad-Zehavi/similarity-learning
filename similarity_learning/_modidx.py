# Autogenerated by nbdev

d = { 'settings': { 'branch': 'main',
                'doc_baseurl': '/similarity-learning',
                'doc_host': 'https://Irad-Zehavi.github.io',
                'git_url': 'https://github.com/Irad-Zehavi/similarity-learning',
                'lib_path': 'similarity_learning'},
  'syms': { 'similarity_learning.all': {},
            'similarity_learning.facenet': { 'similarity_learning.facenet.FaceNetInceptionResnetV1': ( 'facenet.html#facenetinceptionresnetv1',
                                                                                                       'similarity_learning/facenet.py'),
                                             'similarity_learning.facenet.FaceNetInceptionResnetV1.__init__': ( 'facenet.html#facenetinceptionresnetv1.__init__',
                                                                                                                'similarity_learning/facenet.py'),
                                             'similarity_learning.facenet.FaceNetInceptionResnetV1.forward': ( 'facenet.html#facenetinceptionresnetv1.forward',
                                                                                                               'similarity_learning/facenet.py'),
                                             'similarity_learning.facenet.facenet': ( 'facenet.html#facenet',
                                                                                      'similarity_learning/facenet.py')},
            'similarity_learning.pair_matching': { 'similarity_learning.pair_matching.ThresholdSiamese': ( 'pair_matching.html#thresholdsiamese',
                                                                                                           'similarity_learning/pair_matching.py'),
                                                   'similarity_learning.pair_matching.ThresholdSiamese.__init__': ( 'pair_matching.html#thresholdsiamese.__init__',
                                                                                                                    'similarity_learning/pair_matching.py'),
                                                   'similarity_learning.pair_matching.ThresholdSiamese.fit_threshold': ( 'pair_matching.html#thresholdsiamese.fit_threshold',
                                                                                                                         'similarity_learning/pair_matching.py'),
                                                   'similarity_learning.pair_matching.ThresholdSiamese.forward': ( 'pair_matching.html#thresholdsiamese.forward',
                                                                                                                   'similarity_learning/pair_matching.py'),
                                                   'similarity_learning.pair_matching.ThresholdSiamese.plot_distance_histogram': ( 'pair_matching.html#thresholdsiamese.plot_distance_histogram',
                                                                                                                                   'similarity_learning/pair_matching.py')},
            'similarity_learning.siamese': { 'similarity_learning.siamese.ContrastiveLoss': ( 'siamese.html#contrastiveloss',
                                                                                              'similarity_learning/siamese.py'),
                                             'similarity_learning.siamese.ContrastiveLoss.__call__': ( 'siamese.html#contrastiveloss.__call__',
                                                                                                       'similarity_learning/siamese.py'),
                                             'similarity_learning.siamese.ContrastiveLoss.__init__': ( 'siamese.html#contrastiveloss.__init__',
                                                                                                       'similarity_learning/siamese.py'),
                                             'similarity_learning.siamese.DistanceSiamese': ( 'siamese.html#distancesiamese',
                                                                                              'similarity_learning/siamese.py'),
                                             'similarity_learning.siamese.DistanceSiamese.__init__': ( 'siamese.html#distancesiamese.__init__',
                                                                                                       'similarity_learning/siamese.py'),
                                             'similarity_learning.siamese.DistanceSiamese.forward': ( 'siamese.html#distancesiamese.forward',
                                                                                                      'similarity_learning/siamese.py'),
                                             'similarity_learning.siamese.DistanceSiamese.plot_distance_histogram': ( 'siamese.html#distancesiamese.plot_distance_histogram',
                                                                                                                      'similarity_learning/siamese.py'),
                                             'similarity_learning.siamese._hist': ('siamese.html#_hist', 'similarity_learning/siamese.py'),
                                             'similarity_learning.siamese.normalized_squared_euclidean_distance': ( 'siamese.html#normalized_squared_euclidean_distance',
                                                                                                                    'similarity_learning/siamese.py')},
            'similarity_learning.utils': { 'similarity_learning.utils.Threshold': ('utils.html#threshold', 'similarity_learning/utils.py'),
                                           'similarity_learning.utils.Threshold.__init__': ( 'utils.html#threshold.__init__',
                                                                                             'similarity_learning/utils.py'),
                                           'similarity_learning.utils.Threshold.fit': ( 'utils.html#threshold.fit',
                                                                                        'similarity_learning/utils.py'),
                                           'similarity_learning.utils.Threshold.forward': ( 'utils.html#threshold.forward',
                                                                                            'similarity_learning/utils.py'),
                                           'similarity_learning.utils.cut_model_by_name': ( 'utils.html#cut_model_by_name',
                                                                                            'similarity_learning/utils.py'),
                                           'similarity_learning.utils.fix_notebook_widgets': ( 'utils.html#fix_notebook_widgets',
                                                                                               'similarity_learning/utils.py')}}}
